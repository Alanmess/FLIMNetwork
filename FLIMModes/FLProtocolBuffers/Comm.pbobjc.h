// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: comm.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum PB_SUB_COMM

/**
 * 主IDPB_MAIN_COMM = 1;// 通用消息
 * 子ID定义
 **/
typedef GPB_ENUM(PB_SUB_COMM) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB_SUB_COMM_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB_SUB_COMM_PbSubCommHeartBeat = 0,

  /** ok rsp */
  PB_SUB_COMM_PbSubCommAck = 1,

  /** error rsp */
  PB_SUB_COMM_PbSubCommAnk = 2,
  PB_SUB_COMM_PbSubCommUserInfoChange = 3,
  PB_SUB_COMM_PbSubWsHeartBeat = 4,

  /** 通用通知 */
  PB_SUB_COMM_PbSubCommNotify = 10,
};

GPBEnumDescriptor *PB_SUB_COMM_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB_SUB_COMM_IsValidValue(int32_t value);

#pragma mark - Enum PB_EN_MSG_PROCESS_STEP

/** 针对心跳加一个状态的值，初始为0，回复为12 */
typedef GPB_ENUM(PB_EN_MSG_PROCESS_STEP) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB_EN_MSG_PROCESS_STEP_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 主动发心跳的值 */
  PB_EN_MSG_PROCESS_STEP_EnMsgProcessStepInit = 0,

  /** 收到心跳回复来的值 */
  PB_EN_MSG_PROCESS_STEP_EnMsgProcessStepSync = 12,
};

GPBEnumDescriptor *PB_EN_MSG_PROCESS_STEP_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB_EN_MSG_PROCESS_STEP_IsValidValue(int32_t value);

#pragma mark - CommRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface CommRoot : GPBRootObject
@end

#pragma mark - PBHeartBeat

typedef GPB_ENUM(PBHeartBeat_FieldNumber) {
  PBHeartBeat_FieldNumber_ICurStep = 1,
};

/**
 * [START messages]
 * 1,0
 **/
@interface PBHeartBeat : GPBMessage

/** 处理步骤 EN_MSG_PROCESS_STEP */
@property(nonatomic, readwrite) int32_t iCurStep;

@end

#pragma mark - PBCommACK

typedef GPB_ENUM(PBCommACK_FieldNumber) {
  PBCommACK_FieldNumber_WMainCmdId = 1,
  PBCommACK_FieldNumber_WSubCmdId = 2,
  PBCommACK_FieldNumber_DwExp = 3,
};

/**
 * 1,1  针对某个消息的成功回应
 **/
@interface PBCommACK : GPBMessage

/** 主命令码 */
@property(nonatomic, readwrite) int32_t wMainCmdId;

/** 子命令码 */
@property(nonatomic, readwrite) int32_t wSubCmdId;

@property(nonatomic, readwrite) uint32_t dwExp;

@end

#pragma mark - PBCommANK

typedef GPB_ENUM(PBCommANK_FieldNumber) {
  PBCommANK_FieldNumber_WMainCmdId = 1,
  PBCommANK_FieldNumber_WSubCmdId = 2,
  PBCommANK_FieldNumber_DwExp = 3,
  PBCommANK_FieldNumber_DwErrCode = 4,
};

/**
 * 1,2  针对某个消息的失败回应
 **/
@interface PBCommANK : GPBMessage

/** 主命令码 */
@property(nonatomic, readwrite) int32_t wMainCmdId;

/** 子命令码 */
@property(nonatomic, readwrite) int32_t wSubCmdId;

@property(nonatomic, readwrite) uint32_t dwExp;

/** 错误码 */
@property(nonatomic, readwrite) uint32_t dwErrCode;

@end

#pragma mark - PBWsHeartBeat

typedef GPB_ENUM(PBWsHeartBeat_FieldNumber) {
  PBWsHeartBeat_FieldNumber_ICurStep = 1,
};

@interface PBWsHeartBeat : GPBMessage

/** 处理步骤 EN_MSG_PROCESS_STEP */
@property(nonatomic, readwrite) int32_t iCurStep;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
